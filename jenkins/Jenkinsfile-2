pipeline {
    agent {
        label {
            label 'agent-1'
            retries 5
        }
    }
    environment {
        REPO_URL = "https://github.com/junaid-13/end-2-end-project.git"
        REPO_NAME = "end-2-end-project"
    }
    /*stages {
        stage ('Cloning repository') {
            agent { 
                label 'terraform'
            }
            steps {
                sh 'git clone $REPO_URL'
                sh 'cd $REPO_NAME/scripts/'
                sh 'chmod +x repo.sh'
                sh './repo.sh'
            }
        }*/
        stage ('Terraform Installation') {
                agent { 
                    label 'terraform'
                }
                steps {
                sh 'cd $REPO_NAME/scripts/'
                sh 'chmod +x terraform-installation.sh'
                sh './terraform-installation.sh'
            }
        }
        stage ('Deploying infrastructure') {
              agent { 
                    label 'terraform'
                }
            steps {
                sh 'terraform --version'
                sh 'cd $REPO_NAME/GitHub_repository/'
                sh '''
                echo '###########################'
                echo 'Initializing Terraform...'
                echo '###########################'
                '''
                sh 'terraform init'
                sh '''
                echo '###########################'
                echo 'Validating Terraform configuration...'
                echo '###########################'
                '''
                sh 'terraform validate'

                sh '''
                echo '###########################'
                echo 'Planning Terraform configuration...'
                echo '###########################'
                '''
                retry (2) {
                    sh 'terraform plan -var github_token=$github_token'
                }
                sh '''
                echo '###########################'
                echo 'Applying Terraform configuration...'
                echo '###########################'
                '''
                retry (2) {
                    sh 'terraform apply --auto-approve'
                }

            }
        }
    }
